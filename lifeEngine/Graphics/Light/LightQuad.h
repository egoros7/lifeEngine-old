//////////////////////////////////////////////////////////////////////////
// 
//			*** lifeEngine (Двигатель Жизни) ***
//					Copyright (C) 2017
//
// Связь со мной:		https://vk.com/zombihello
// Репозиторий движка:  https://github.com/zombihello/lifeEngine
// 
//////////////////////////////////////////////////////////////////////////

#ifndef LIGHT_QUAD_H
#define LIGHT_QUAD_H

#define COMPILING_LIBRARY
#include <DllGlobal.h>

//////////////
// OPENGL
//////////////
#include <glew\glew.h>
#include <glm\glm.hpp>

namespace le
{
	//-------------------------------------------------------------------------//

	//////////////////////////////////////////////////////////////////////
	/// \brief Класс квадрата для направленого освещения
	///
	/// Данный класс используеться для создания направленого освещения
	//////////////////////////////////////////////////////////////////////
	class DLL_API LightQuad
	{
	public:
		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор
		//////////////////////////////////////////////////////////////////////
		LightQuad();

		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор копирывания
		//////////////////////////////////////////////////////////////////////
		LightQuad( const LightQuad& Copy );

		//////////////////////////////////////////////////////////////////////
		/// \brief Деструктор
		//////////////////////////////////////////////////////////////////////
		~LightQuad();

		//////////////////////////////////////////////////////////////////////
		/// \brief Инициализировать квадрат
		///		
		/// \param[in] Size Размер квадрата
		//////////////////////////////////////////////////////////////////////
		void InitQuad( float Size );

		//////////////////////////////////////////////////////////////////////
		/// \brief Отрендерить квадрат
		//////////////////////////////////////////////////////////////////////
		void RenderQuad();

		//////////////////////////////////////////////////////////////////////
		/// \brief Задать размер квадрата
		///		
		/// \param[in] Size Размер квадрата
		//////////////////////////////////////////////////////////////////////
		void SetSize( float Size );

		LightQuad& operator=( const LightQuad& Copy );

	private:

		float			Size; ///< Размер квадрата

		GLuint			ArrayBuffer; ///< VAO буффер
		GLuint			VertexBuffer; ///< Вершиный буффер
		GLuint			IndexBuffer; ///< Индексный буффер
	};

	//-------------------------------------------------------------------------//
}

#endif // LIGHT_QUAD_H



