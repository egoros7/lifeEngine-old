#include <System\VAO.h>
#include <Graphics\Light\LightCone.h>

//-------------------------------------------------------------------------//

le::LightCone::LightCone() :
	ArrayBuffer( 0 ),
	VertexBuffer( 0 ),
	IndexBuffer( 0 ),
	Radius( 0 ),
	Height( 0 )
{}

//-------------------------------------------------------------------------//

le::LightCone::LightCone( LightCone& Copy )
{
	Query = Copy.Query;
	Radius = Copy.Radius;
	Height = Copy.Height;
	Transformation = Copy.Transformation;
	Position = Copy.Position;
	BoundingBox = Copy.BoundingBox;

	if ( Copy.ArrayBuffer != 0 )
		InitCone( Height, Radius );
	else
		ArrayBuffer = IndexBuffer = VertexBuffer = 0;
}

//-------------------------------------------------------------------------//

le::LightCone::~LightCone()
{
	if ( ArrayBuffer != 0 )
	{
		VAO::DeleteVAO( &ArrayBuffer );
		VAO::DeleteBuffer( &IndexBuffer );
		VAO::DeleteBuffer( &VertexBuffer );
	}
}

//-------------------------------------------------------------------------//

void le::LightCone::InitCone( const float& Height, const float& Radius )
{
	if ( ArrayBuffer != 0 ) return;

	vector<glm::vec3> Vertexes = CreateCone( Height, Radius );

	unsigned int IdVertexes[] =
	{
		811, 820, 821, 820, 819, 821, 819, 818, 821, 818,
		817, 821, 817, 816, 821, 816, 815, 821, 815, 814,
		821, 814, 813, 821, 813, 812, 821, 812, 811, 821,
		811, 801, 810, 820, 811, 810, 820, 810, 809, 819,
		820, 809, 819, 809, 808, 818, 819, 808, 818, 808,
		807, 817, 818, 807, 817, 807, 806, 816, 817, 806,
		816, 806, 805, 815, 816, 805, 815, 805, 804, 814,
		815, 804, 814, 804, 803, 813, 814, 803, 813, 803,
		802, 812, 813, 802, 812, 802, 801, 811, 812, 801,
		801, 791, 800, 810, 801, 800, 810, 800, 799, 809,
		810, 799, 809, 799, 798, 808, 809, 798, 808, 798,
		797, 807, 808, 797, 807, 797, 796, 806, 807, 796,
		806, 796, 795, 805, 806, 795, 805, 795, 794, 804,
		805, 794, 804, 794, 793, 803, 804, 793, 803, 793,
		792, 802, 803, 792, 802, 792, 791, 801, 802, 791,
		791, 781, 790, 800, 791, 790, 800, 790, 789, 799,
		800, 789, 799, 789, 788, 798, 799, 788, 798, 788,
		787, 797, 798, 787, 797, 787, 786, 796, 797, 786,
		796, 786, 785, 795, 796, 785, 795, 785, 784, 794,
		795, 784, 794, 784, 783, 793, 794, 783, 793, 783,
		782, 792, 793, 782, 792, 782, 781, 791, 792, 781,
		781, 771, 780, 790, 781, 780, 790, 780, 779, 789,
		790, 779, 789, 779, 778, 788, 789, 778, 788, 778,
		777, 787, 788, 777, 787, 777, 776, 786, 787, 776,
		786, 776, 775, 785, 786, 775, 785, 775, 774, 784,
		785, 774, 784, 774, 773, 783, 784, 773, 783, 773,
		772, 782, 783, 772, 782, 772, 771, 781, 782, 771,
		771, 761, 770, 780, 771, 770, 780, 770, 769, 779,
		780, 769, 779, 769, 768, 778, 779, 768, 778, 768,
		767, 777, 778, 767, 777, 767, 766, 776, 777, 766,
		776, 766, 765, 775, 776, 765, 775, 765, 764, 774,
		775, 764, 774, 764, 763, 773, 774, 763, 773, 763,
		762, 772, 773, 762, 772, 762, 761, 771, 772, 761,
		761, 751, 760, 770, 761, 760, 770, 760, 759, 769,
		770, 759, 769, 759, 758, 768, 769, 758, 768, 758,
		757, 767, 768, 757, 767, 757, 756, 766, 767, 756,
		766, 756, 755, 765, 766, 755, 765, 755, 754, 764,
		765, 754, 764, 754, 753, 763, 764, 753, 763, 753,
		752, 762, 763, 752, 762, 752, 751, 761, 762, 751,
		751, 741, 750, 760, 751, 750, 760, 750, 749, 759,
		760, 749, 759, 749, 748, 758, 759, 748, 758, 748,
		747, 757, 758, 747, 757, 747, 746, 756, 757, 746,
		756, 746, 745, 755, 756, 745, 755, 745, 744, 754,
		755, 744, 754, 744, 743, 753, 754, 743, 753, 743,
		742, 752, 753, 742, 752, 742, 741, 751, 752, 741,
		741, 731, 740, 750, 741, 740, 750, 740, 739, 749,
		750, 739, 749, 739, 738, 748, 749, 738, 748, 738,
		737, 747, 748, 737, 747, 737, 736, 746, 747, 736,
		746, 736, 735, 745, 746, 735, 745, 735, 734, 744,
		745, 734, 744, 734, 733, 743, 744, 733, 743, 733,
		732, 742, 743, 732, 742, 732, 731, 741, 742, 731,
		731, 721, 730, 740, 731, 730, 740, 730, 729, 739,
		740, 729, 739, 729, 728, 738, 739, 728, 738, 728,
		727, 737, 738, 727, 737, 727, 726, 736, 737, 726,
		736, 726, 725, 735, 736, 725, 735, 725, 724, 734,
		735, 724, 734, 724, 723, 733, 734, 723, 733, 723,
		722, 732, 733, 722, 732, 722, 721, 731, 732, 721,
		721, 711, 720, 730, 721, 720, 730, 720, 719, 729,
		730, 719, 729, 719, 718, 728, 729, 718, 728, 718,
		717, 727, 728, 717, 727, 717, 716, 726, 727, 716,
		726, 716, 715, 725, 726, 715, 725, 715, 714, 724,
		725, 714, 724, 714, 713, 723, 724, 713, 723, 713,
		712, 722, 723, 712, 722, 712, 711, 721, 722, 711,
		711, 701, 710, 720, 711, 710, 720, 710, 709, 719,
		720, 709, 719, 709, 708, 718, 719, 708, 718, 708,
		707, 717, 718, 707, 717, 707, 706, 716, 717, 706,
		716, 706, 705, 715, 716, 705, 715, 705, 704, 714,
		715, 704, 714, 704, 703, 713, 714, 703, 713, 703,
		702, 712, 713, 702, 712, 702, 701, 711, 712, 701,
		701, 691, 700, 710, 701, 700, 710, 700, 699, 709,
		710, 699, 709, 699, 698, 708, 709, 698, 708, 698,
		697, 707, 708, 697, 707, 697, 696, 706, 707, 696,
		706, 696, 695, 705, 706, 695, 705, 695, 694, 704,
		705, 694, 704, 694, 693, 703, 704, 693, 703, 693,
		692, 702, 703, 692, 702, 692, 691, 701, 702, 691,
		691, 681, 690, 700, 691, 690, 700, 690, 689, 699,
		700, 689, 699, 689, 688, 698, 699, 688, 698, 688,
		687, 697, 698, 687, 697, 687, 686, 696, 697, 686,
		696, 686, 685, 695, 696, 685, 695, 685, 684, 694,
		695, 684, 694, 684, 683, 693, 694, 683, 693, 683,
		682, 692, 693, 682, 692, 682, 681, 691, 692, 681,
		681, 671, 680, 690, 681, 680, 690, 680, 679, 689,
		690, 679, 689, 679, 678, 688, 689, 678, 688, 678,
		677, 687, 688, 677, 687, 677, 676, 686, 687, 676,
		686, 676, 675, 685, 686, 675, 685, 675, 674, 684,
		685, 674, 684, 674, 673, 683, 684, 673, 683, 673,
		672, 682, 683, 672, 682, 672, 671, 681, 682, 671,
		671, 661, 670, 680, 671, 670, 680, 670, 669, 679,
		680, 669, 679, 669, 668, 678, 679, 668, 678, 668,
		667, 677, 678, 667, 677, 667, 666, 676, 677, 666,
		676, 666, 665, 675, 676, 665, 675, 665, 664, 674,
		675, 664, 674, 664, 663, 673, 674, 663, 673, 663,
		662, 672, 673, 662, 672, 662, 661, 671, 672, 661,
		661, 651, 660, 670, 661, 660, 670, 660, 659, 669,
		670, 659, 669, 659, 658, 668, 669, 658, 668, 658,
		657, 667, 668, 657, 667, 657, 656, 666, 667, 656,
		666, 656, 655, 665, 666, 655, 665, 655, 654, 664,
		665, 654, 664, 654, 653, 663, 664, 653, 663, 653,
		652, 662, 663, 652, 662, 652, 651, 661, 662, 651,
		651, 641, 650, 660, 651, 650, 660, 650, 649, 659,
		660, 649, 659, 649, 648, 658, 659, 648, 658, 648,
		647, 657, 658, 647, 657, 647, 646, 656, 657, 646,
		656, 646, 645, 655, 656, 645, 655, 645, 644, 654,
		655, 644, 654, 644, 643, 653, 654, 643, 653, 643,
		642, 652, 653, 642, 652, 642, 641, 651, 652, 641,
		641, 631, 640, 650, 641, 640, 650, 640, 639, 649,
		650, 639, 649, 639, 638, 648, 649, 638, 648, 638,
		637, 647, 648, 637, 647, 637, 636, 646, 647, 636,
		646, 636, 635, 645, 646, 635, 645, 635, 634, 644,
		645, 634, 644, 634, 633, 643, 644, 633, 643, 633,
		632, 642, 643, 632, 642, 632, 631, 641, 642, 631,
		631, 621, 630, 640, 631, 630, 640, 630, 629, 639,
		640, 629, 639, 629, 628, 638, 639, 628, 638, 628,
		627, 637, 638, 627, 637, 627, 626, 636, 637, 626,
		636, 626, 625, 635, 636, 625, 635, 625, 624, 634,
		635, 624, 634, 624, 623, 633, 634, 623, 633, 623,
		622, 632, 633, 622, 632, 622, 621, 631, 632, 621,
		621, 611, 620, 630, 621, 620, 630, 620, 619, 629,
		630, 619, 629, 619, 618, 628, 629, 618, 628, 618,
		617, 627, 628, 617, 627, 617, 616, 626, 627, 616,
		626, 616, 615, 625, 626, 615, 625, 615, 614, 624,
		625, 614, 624, 614, 613, 623, 624, 613, 623, 613,
		612, 622, 623, 612, 622, 612, 611, 621, 622, 611,
		611, 601, 610, 620, 611, 610, 620, 610, 609, 619,
		620, 609, 619, 609, 608, 618, 619, 608, 618, 608,
		607, 617, 618, 607, 617, 607, 606, 616, 617, 606,
		616, 606, 605, 615, 616, 605, 615, 605, 604, 614,
		615, 604, 614, 604, 603, 613, 614, 603, 613, 603,
		602, 612, 613, 602, 612, 602, 601, 611, 612, 601,
		601, 591, 600, 610, 601, 600, 610, 600, 599, 609,
		610, 599, 609, 599, 598, 608, 609, 598, 608, 598,
		597, 607, 608, 597, 607, 597, 596, 606, 607, 596,
		606, 596, 595, 605, 606, 595, 605, 595, 594, 604,
		605, 594, 604, 594, 593, 603, 604, 593, 603, 593,
		592, 602, 603, 592, 602, 592, 591, 601, 602, 591,
		591, 581, 590, 600, 591, 590, 600, 590, 589, 599,
		600, 589, 599, 589, 588, 598, 599, 588, 598, 588,
		587, 597, 598, 587, 597, 587, 586, 596, 597, 586,
		596, 586, 585, 595, 596, 585, 595, 585, 584, 594,
		595, 584, 594, 584, 583, 593, 594, 583, 593, 583,
		582, 592, 593, 582, 592, 582, 581, 591, 592, 581,
		581, 571, 580, 590, 581, 580, 590, 580, 579, 589,
		590, 579, 589, 579, 578, 588, 589, 578, 588, 578,
		577, 587, 588, 577, 587, 577, 576, 586, 587, 576,
		586, 576, 575, 585, 586, 575, 585, 575, 574, 584,
		585, 574, 584, 574, 573, 583, 584, 573, 583, 573,
		572, 582, 583, 572, 582, 572, 571, 581, 582, 571,
		571, 561, 570, 580, 571, 570, 580, 570, 569, 579,
		580, 569, 579, 569, 568, 578, 579, 568, 578, 568,
		567, 577, 578, 567, 577, 567, 566, 576, 577, 566,
		576, 566, 565, 575, 576, 565, 575, 565, 564, 574,
		575, 564, 574, 564, 563, 573, 574, 563, 573, 563,
		562, 572, 573, 562, 572, 562, 561, 571, 572, 561,
		561, 551, 560, 570, 561, 560, 570, 560, 559, 569,
		570, 559, 569, 559, 558, 568, 569, 558, 568, 558,
		557, 567, 568, 557, 567, 557, 556, 566, 567, 556,
		566, 556, 555, 565, 566, 555, 565, 555, 554, 564,
		565, 554, 564, 554, 553, 563, 564, 553, 563, 553,
		552, 562, 563, 552, 562, 552, 551, 561, 562, 551,
		551, 541, 550, 560, 551, 550, 560, 550, 549, 559,
		560, 549, 559, 549, 548, 558, 559, 548, 558, 548,
		547, 557, 558, 547, 557, 547, 546, 556, 557, 546,
		556, 546, 545, 555, 556, 545, 555, 545, 544, 554,
		555, 544, 554, 544, 543, 553, 554, 543, 553, 543,
		542, 552, 553, 542, 552, 542, 541, 551, 552, 541,
		541, 531, 540, 550, 541, 540, 550, 540, 539, 549,
		550, 539, 549, 539, 538, 548, 549, 538, 548, 538,
		537, 547, 548, 537, 547, 537, 536, 546, 547, 536,
		546, 536, 535, 545, 546, 535, 545, 535, 534, 544,
		545, 534, 544, 534, 533, 543, 544, 533, 543, 533,
		532, 542, 543, 532, 542, 532, 531, 541, 542, 531,
		531, 521, 530, 540, 531, 530, 540, 530, 529, 539,
		540, 529, 539, 529, 528, 538, 539, 528, 538, 528,
		527, 537, 538, 527, 537, 527, 526, 536, 537, 526,
		536, 526, 525, 535, 536, 525, 535, 525, 524, 534,
		535, 524, 534, 524, 523, 533, 534, 523, 533, 523,
		522, 532, 533, 522, 532, 522, 521, 531, 532, 521,
		521, 511, 520, 530, 521, 520, 530, 520, 519, 529,
		530, 519, 529, 519, 518, 528, 529, 518, 528, 518,
		517, 527, 528, 517, 527, 517, 516, 526, 527, 516,
		526, 516, 515, 525, 526, 515, 525, 515, 514, 524,
		525, 514, 524, 514, 513, 523, 524, 513, 523, 513,
		512, 522, 523, 512, 522, 512, 511, 521, 522, 511,
		511, 501, 510, 520, 511, 510, 520, 510, 509, 519,
		520, 509, 519, 509, 508, 518, 519, 508, 518, 508,
		507, 517, 518, 507, 517, 507, 506, 516, 517, 506,
		516, 506, 505, 515, 516, 505, 515, 505, 504, 514,
		515, 504, 514, 504, 503, 513, 514, 503, 513, 503,
		502, 512, 513, 502, 512, 502, 501, 511, 512, 501,
		501, 491, 500, 510, 501, 500, 510, 500, 499, 509,
		510, 499, 509, 499, 498, 508, 509, 498, 508, 498,
		497, 507, 508, 497, 507, 497, 496, 506, 507, 496,
		506, 496, 495, 505, 506, 495, 505, 495, 494, 504,
		505, 494, 504, 494, 493, 503, 504, 493, 503, 493,
		492, 502, 503, 492, 502, 492, 491, 501, 502, 491,
		491, 481, 490, 500, 491, 490, 500, 490, 489, 499,
		500, 489, 499, 489, 488, 498, 499, 488, 498, 488,
		487, 497, 498, 487, 497, 487, 486, 496, 497, 486,
		496, 486, 485, 495, 496, 485, 495, 485, 484, 494,
		495, 484, 494, 484, 483, 493, 494, 483, 493, 483,
		482, 492, 493, 482, 492, 482, 481, 491, 492, 481,
		481, 471, 480, 490, 481, 480, 490, 480, 479, 489,
		490, 479, 489, 479, 478, 488, 489, 478, 488, 478,
		477, 487, 488, 477, 487, 477, 476, 486, 487, 476,
		486, 476, 475, 485, 486, 475, 485, 475, 474, 484,
		485, 474, 484, 474, 473, 483, 484, 473, 483, 473,
		472, 482, 483, 472, 482, 472, 471, 481, 482, 471,
		471, 461, 470, 480, 471, 470, 480, 470, 469, 479,
		480, 469, 479, 469, 468, 478, 479, 468, 478, 468,
		467, 477, 478, 467, 477, 467, 466, 476, 477, 466,
		476, 466, 465, 475, 476, 465, 475, 465, 464, 474,
		475, 464, 474, 464, 463, 473, 474, 463, 473, 463,
		462, 472, 473, 462, 472, 462, 461, 471, 472, 461,
		461, 451, 460, 470, 461, 460, 470, 460, 459, 469,
		470, 459, 469, 459, 458, 468, 469, 458, 468, 458,
		457, 467, 468, 457, 467, 457, 456, 466, 467, 456,
		466, 456, 455, 465, 466, 455, 465, 455, 454, 464,
		465, 454, 464, 454, 453, 463, 464, 453, 463, 453,
		452, 462, 463, 452, 462, 452, 451, 461, 462, 451,
		451, 441, 450, 460, 451, 450, 460, 450, 449, 459,
		460, 449, 459, 449, 448, 458, 459, 448, 458, 448,
		447, 457, 458, 447, 457, 447, 446, 456, 457, 446,
		456, 446, 445, 455, 456, 445, 455, 445, 444, 454,
		455, 444, 454, 444, 443, 453, 454, 443, 453, 443,
		442, 452, 453, 442, 452, 442, 441, 451, 452, 441,
		441, 431, 440, 450, 441, 440, 450, 440, 439, 449,
		450, 439, 449, 439, 438, 448, 449, 438, 448, 438,
		437, 447, 448, 437, 447, 437, 436, 446, 447, 436,
		446, 436, 435, 445, 446, 435, 445, 435, 434, 444,
		445, 434, 444, 434, 433, 443, 444, 433, 443, 433,
		432, 442, 443, 432, 442, 432, 431, 441, 442, 431,
		431, 421, 430, 440, 431, 430, 440, 430, 429, 439,
		440, 429, 439, 429, 428, 438, 439, 428, 438, 428,
		427, 437, 438, 427, 437, 427, 426, 436, 437, 426,
		436, 426, 425, 435, 436, 425, 435, 425, 424, 434,
		435, 424, 434, 424, 423, 433, 434, 423, 433, 423,
		422, 432, 433, 422, 432, 422, 421, 431, 432, 421,
		421, 411, 420, 430, 421, 420, 430, 420, 419, 429,
		430, 419, 429, 419, 418, 428, 429, 418, 428, 418,
		417, 427, 428, 417, 427, 417, 416, 426, 427, 416,
		426, 416, 415, 425, 426, 415, 425, 415, 414, 424,
		425, 414, 424, 414, 413, 423, 424, 413, 423, 413,
		412, 422, 423, 412, 422, 412, 411, 421, 422, 411,
		411, 401, 410, 420, 411, 410, 420, 410, 409, 419,
		420, 409, 419, 409, 408, 418, 419, 408, 418, 408,
		407, 417, 418, 407, 417, 407, 406, 416, 417, 406,
		416, 406, 405, 415, 416, 405, 415, 405, 404, 414,
		415, 404, 414, 404, 403, 413, 414, 403, 413, 403,
		402, 412, 413, 402, 412, 402, 401, 411, 412, 401,
		401, 391, 400, 410, 401, 400, 410, 400, 399, 409,
		410, 399, 409, 399, 398, 408, 409, 398, 408, 398,
		397, 407, 408, 397, 407, 397, 396, 406, 407, 396,
		406, 396, 395, 405, 406, 395, 405, 395, 394, 404,
		405, 394, 404, 394, 393, 403, 404, 393, 403, 393,
		392, 402, 403, 392, 402, 392, 391, 401, 402, 391,
		391, 381, 390, 400, 391, 390, 400, 390, 389, 399,
		400, 389, 399, 389, 388, 398, 399, 388, 398, 388,
		387, 397, 398, 387, 397, 387, 386, 396, 397, 386,
		396, 386, 385, 395, 396, 385, 395, 385, 384, 394,
		395, 384, 394, 384, 383, 393, 394, 383, 393, 383,
		382, 392, 393, 382, 392, 382, 381, 391, 392, 381,
		381, 371, 380, 390, 381, 380, 390, 380, 379, 389,
		390, 379, 389, 379, 378, 388, 389, 378, 388, 378,
		377, 387, 388, 377, 387, 377, 376, 386, 387, 376,
		386, 376, 375, 385, 386, 375, 385, 375, 374, 384,
		385, 374, 384, 374, 373, 383, 384, 373, 383, 373,
		372, 382, 383, 372, 382, 372, 371, 381, 382, 371,
		371, 361, 370, 380, 371, 370, 380, 370, 369, 379,
		380, 369, 379, 369, 368, 378, 379, 368, 378, 368,
		367, 377, 378, 367, 377, 367, 366, 376, 377, 366,
		376, 366, 365, 375, 376, 365, 375, 365, 364, 374,
		375, 364, 374, 364, 363, 373, 374, 363, 373, 363,
		362, 372, 373, 362, 372, 362, 361, 371, 372, 361,
		361, 351, 360, 370, 361, 360, 370, 360, 359, 369,
		370, 359, 369, 359, 358, 368, 369, 358, 368, 358,
		357, 367, 368, 357, 367, 357, 356, 366, 367, 356,
		366, 356, 355, 365, 366, 355, 365, 355, 354, 364,
		365, 354, 364, 354, 353, 363, 364, 353, 363, 353,
		352, 362, 363, 352, 362, 352, 351, 361, 362, 351,
		351, 341, 350, 360, 351, 350, 360, 350, 349, 359,
		360, 349, 359, 349, 348, 358, 359, 348, 358, 348,
		347, 357, 358, 347, 357, 347, 346, 356, 357, 346,
		356, 346, 345, 355, 356, 345, 355, 345, 344, 354,
		355, 344, 354, 344, 343, 353, 354, 343, 353, 343,
		342, 352, 353, 342, 352, 342, 341, 351, 352, 341,
		341, 331, 340, 350, 341, 340, 350, 340, 339, 349,
		350, 339, 349, 339, 338, 348, 349, 338, 348, 338,
		337, 347, 348, 337, 347, 337, 336, 346, 347, 336,
		346, 336, 335, 345, 346, 335, 345, 335, 334, 344,
		345, 334, 344, 334, 333, 343, 344, 333, 343, 333,
		332, 342, 343, 332, 342, 332, 331, 341, 342, 331,
		331, 321, 330, 340, 331, 330, 340, 330, 329, 339,
		340, 329, 339, 329, 328, 338, 339, 328, 338, 328,
		327, 337, 338, 327, 337, 327, 326, 336, 337, 326,
		336, 326, 325, 335, 336, 325, 335, 325, 324, 334,
		335, 324, 334, 324, 323, 333, 334, 323, 333, 323,
		322, 332, 333, 322, 332, 322, 321, 331, 332, 321,
		321, 311, 320, 330, 321, 320, 330, 320, 319, 329,
		330, 319, 329, 319, 318, 328, 329, 318, 328, 318,
		317, 327, 328, 317, 327, 317, 316, 326, 327, 316,
		326, 316, 315, 325, 326, 315, 325, 315, 314, 324,
		325, 314, 324, 314, 313, 323, 324, 313, 323, 313,
		312, 322, 323, 312, 322, 312, 311, 321, 322, 311,
		311, 301, 310, 320, 311, 310, 320, 310, 309, 319,
		320, 309, 319, 309, 308, 318, 319, 308, 318, 308,
		307, 317, 318, 307, 317, 307, 306, 316, 317, 306,
		316, 306, 305, 315, 316, 305, 315, 305, 304, 314,
		315, 304, 314, 304, 303, 313, 314, 303, 313, 303,
		302, 312, 313, 302, 312, 302, 301, 311, 312, 301,
		301, 291, 300, 310, 301, 300, 310, 300, 299, 309,
		310, 299, 309, 299, 298, 308, 309, 298, 308, 298,
		297, 307, 308, 297, 307, 297, 296, 306, 307, 296,
		306, 296, 295, 305, 306, 295, 305, 295, 294, 304,
		305, 294, 304, 294, 293, 303, 304, 293, 303, 293,
		292, 302, 303, 292, 302, 292, 291, 301, 302, 291,
		291, 281, 290, 300, 291, 290, 300, 290, 289, 299,
		300, 289, 299, 289, 288, 298, 299, 288, 298, 288,
		287, 297, 298, 287, 297, 287, 286, 296, 297, 286,
		296, 286, 285, 295, 296, 285, 295, 285, 284, 294,
		295, 284, 294, 284, 283, 293, 294, 283, 293, 283,
		282, 292, 293, 282, 292, 282, 281, 291, 292, 281,
		281, 271, 280, 290, 281, 280, 290, 280, 279, 289,
		290, 279, 289, 279, 278, 288, 289, 278, 288, 278,
		277, 287, 288, 277, 287, 277, 276, 286, 287, 276,
		286, 276, 275, 285, 286, 275, 285, 275, 274, 284,
		285, 274, 284, 274, 273, 283, 284, 273, 283, 273,
		272, 282, 283, 272, 282, 272, 271, 281, 282, 271,
		271, 261, 270, 280, 271, 270, 280, 270, 269, 279,
		280, 269, 279, 269, 268, 278, 279, 268, 278, 268,
		267, 277, 278, 267, 277, 267, 266, 276, 277, 266,
		276, 266, 265, 275, 276, 265, 275, 265, 264, 274,
		275, 264, 274, 264, 263, 273, 274, 263, 273, 263,
		262, 272, 273, 262, 272, 262, 261, 271, 272, 261,
		261, 251, 260, 270, 261, 260, 270, 260, 259, 269,
		270, 259, 269, 259, 258, 268, 269, 258, 268, 258,
		257, 267, 268, 257, 267, 257, 256, 266, 267, 256,
		266, 256, 255, 265, 266, 255, 265, 255, 254, 264,
		265, 254, 264, 254, 253, 263, 264, 253, 263, 253,
		252, 262, 263, 252, 262, 252, 251, 261, 262, 251,
		251, 241, 250, 260, 251, 250, 260, 250, 249, 259,
		260, 249, 259, 249, 248, 258, 259, 248, 258, 248,
		247, 257, 258, 247, 257, 247, 246, 256, 257, 246,
		256, 246, 245, 255, 256, 245, 255, 245, 244, 254,
		255, 244, 254, 244, 243, 253, 254, 243, 253, 243,
		242, 252, 253, 242, 252, 242, 241, 251, 252, 241,
		241, 231, 240, 250, 241, 240, 250, 240, 239, 249,
		250, 239, 249, 239, 238, 248, 249, 238, 248, 238,
		237, 247, 248, 237, 247, 237, 236, 246, 247, 236,
		246, 236, 235, 245, 246, 235, 245, 235, 234, 244,
		245, 234, 244, 234, 233, 243, 244, 233, 243, 233,
		232, 242, 243, 232, 242, 232, 231, 241, 242, 231,
		231, 221, 230, 240, 231, 230, 240, 230, 229, 239,
		240, 229, 239, 229, 228, 238, 239, 228, 238, 228,
		227, 237, 238, 227, 237, 227, 226, 236, 237, 226,
		236, 226, 225, 235, 236, 225, 235, 225, 224, 234,
		235, 224, 234, 224, 223, 233, 234, 223, 233, 223,
		222, 232, 233, 222, 232, 222, 221, 231, 232, 221,
		221, 211, 220, 230, 221, 220, 230, 220, 219, 229,
		230, 219, 229, 219, 218, 228, 229, 218, 228, 218,
		217, 227, 228, 217, 227, 217, 216, 226, 227, 216,
		226, 216, 215, 225, 226, 215, 225, 215, 214, 224,
		225, 214, 224, 214, 213, 223, 224, 213, 223, 213,
		212, 222, 223, 212, 222, 212, 211, 221, 222, 211,
		211, 201, 210, 220, 211, 210, 220, 210, 209, 219,
		220, 209, 219, 209, 208, 218, 219, 208, 218, 208,
		207, 217, 218, 207, 217, 207, 206, 216, 217, 206,
		216, 206, 205, 215, 216, 205, 215, 205, 204, 214,
		215, 204, 214, 204, 203, 213, 214, 203, 213, 203,
		202, 212, 213, 202, 212, 202, 201, 211, 212, 201,
		201, 191, 200, 210, 201, 200, 210, 200, 199, 209,
		210, 199, 209, 199, 198, 208, 209, 198, 208, 198,
		197, 207, 208, 197, 207, 197, 196, 206, 207, 196,
		206, 196, 195, 205, 206, 195, 205, 195, 194, 204,
		205, 194, 204, 194, 193, 203, 204, 193, 203, 193,
		192, 202, 203, 192, 202, 192, 191, 201, 202, 191,
		191, 181, 190, 200, 191, 190, 200, 190, 189, 199,
		200, 189, 199, 189, 188, 198, 199, 188, 198, 188,
		187, 197, 198, 187, 197, 187, 186, 196, 197, 186,
		196, 186, 185, 195, 196, 185, 195, 185, 184, 194,
		195, 184, 194, 184, 183, 193, 194, 183, 193, 183,
		182, 192, 193, 182, 192, 182, 181, 191, 192, 181,
		181, 171, 180, 190, 181, 180, 190, 180, 179, 189,
		190, 179, 189, 179, 178, 188, 189, 178, 188, 178,
		177, 187, 188, 177, 187, 177, 176, 186, 187, 176,
		186, 176, 175, 185, 186, 175, 185, 175, 174, 184,
		185, 174, 184, 174, 173, 183, 184, 173, 183, 173,
		172, 182, 183, 172, 182, 172, 171, 181, 182, 171,
		171, 161, 170, 180, 171, 170, 180, 170, 169, 179,
		180, 169, 179, 169, 168, 178, 179, 168, 178, 168,
		167, 177, 178, 167, 177, 167, 166, 176, 177, 166,
		176, 166, 165, 175, 176, 165, 175, 165, 164, 174,
		175, 164, 174, 164, 163, 173, 174, 163, 173, 163,
		162, 172, 173, 162, 172, 162, 161, 171, 172, 161,
		161, 151, 160, 170, 161, 160, 170, 160, 159, 169,
		170, 159, 169, 159, 158, 168, 169, 158, 168, 158,
		157, 167, 168, 157, 167, 157, 156, 166, 167, 156,
		166, 156, 155, 165, 166, 155, 165, 155, 154, 164,
		165, 154, 164, 154, 153, 163, 164, 153, 163, 153,
		152, 162, 163, 152, 162, 152, 151, 161, 162, 151,
		151, 141, 150, 160, 151, 150, 160, 150, 149, 159,
		160, 149, 159, 149, 148, 158, 159, 148, 158, 148,
		147, 157, 158, 147, 157, 147, 146, 156, 157, 146,
		156, 146, 145, 155, 156, 145, 155, 145, 144, 154,
		155, 144, 154, 144, 143, 153, 154, 143, 153, 143,
		142, 152, 153, 142, 152, 142, 141, 151, 152, 141,
		141, 131, 140, 150, 141, 140, 150, 140, 139, 149,
		150, 139, 149, 139, 138, 148, 149, 138, 148, 138,
		137, 147, 148, 137, 147, 137, 136, 146, 147, 136,
		146, 136, 135, 145, 146, 135, 145, 135, 134, 144,
		145, 134, 144, 134, 133, 143, 144, 133, 143, 133,
		132, 142, 143, 132, 142, 132, 131, 141, 142, 131,
		131, 121, 130, 140, 131, 130, 140, 130, 129, 139,
		140, 129, 139, 129, 128, 138, 139, 128, 138, 128,
		127, 137, 138, 127, 137, 127, 126, 136, 137, 126,
		136, 126, 125, 135, 136, 125, 135, 125, 124, 134,
		135, 124, 134, 124, 123, 133, 134, 123, 133, 123,
		122, 132, 133, 122, 132, 122, 121, 131, 132, 121,
		121, 111, 120, 130, 121, 120, 130, 120, 119, 129,
		130, 119, 129, 119, 118, 128, 129, 118, 128, 118,
		117, 127, 128, 117, 127, 117, 116, 126, 127, 116,
		126, 116, 115, 125, 126, 115, 125, 115, 114, 124,
		125, 114, 124, 114, 113, 123, 124, 113, 123, 113,
		112, 122, 123, 112, 122, 112, 111, 121, 122, 111,
		111, 101, 110, 120, 111, 110, 120, 110, 109, 119,
		120, 109, 119, 109, 108, 118, 119, 108, 118, 108,
		107, 117, 118, 107, 117, 107, 106, 116, 117, 106,
		116, 106, 105, 115, 116, 105, 115, 105, 104, 114,
		115, 104, 114, 104, 103, 113, 114, 103, 113, 103,
		102, 112, 113, 102, 112, 102, 101, 111, 112, 101,
		101, 91, 100, 110, 101, 100, 110, 100, 99, 109,
		110, 99, 109, 99, 98, 108, 109, 98, 108, 98,
		97, 107, 108, 97, 107, 97, 96, 106, 107, 96,
		106, 96, 95, 105, 106, 95, 105, 95, 94, 104,
		105, 94, 104, 94, 93, 103, 104, 93, 103, 93,
		92, 102, 103, 92, 102, 92, 91, 101, 102, 91,
		91, 81, 90, 100, 91, 90, 100, 90, 89, 99,
		100, 89, 99, 89, 88, 98, 99, 88, 98, 88,
		87, 97, 98, 87, 97, 87, 86, 96, 97, 86,
		96, 86, 85, 95, 96, 85, 95, 85, 84, 94,
		95, 84, 94, 84, 83, 93, 94, 83, 93, 83,
		82, 92, 93, 82, 92, 82, 81, 91, 92, 81,
		81, 71, 80, 90, 81, 80, 90, 80, 79, 89,
		90, 79, 89, 79, 78, 88, 89, 78, 88, 78,
		77, 87, 88, 77, 87, 77, 76, 86, 87, 76,
		86, 76, 75, 85, 86, 75, 85, 75, 74, 84,
		85, 74, 84, 74, 73, 83, 84, 73, 83, 73,
		72, 82, 83, 72, 82, 72, 71, 81, 82, 71,
		71, 61, 70, 80, 71, 70, 80, 70, 69, 79,
		80, 69, 79, 69, 68, 78, 79, 68, 78, 68,
		67, 77, 78, 67, 77, 67, 66, 76, 77, 66,
		76, 66, 65, 75, 76, 65, 75, 65, 64, 74,
		75, 64, 74, 64, 63, 73, 74, 63, 73, 63,
		62, 72, 73, 62, 72, 62, 61, 71, 72, 61,
		61, 51, 60, 70, 61, 60, 70, 60, 59, 69,
		70, 59, 69, 59, 58, 68, 69, 58, 68, 58,
		57, 67, 68, 57, 67, 57, 56, 66, 67, 56,
		66, 56, 55, 65, 66, 55, 65, 55, 54, 64,
		65, 54, 64, 54, 53, 63, 64, 53, 63, 53,
		52, 62, 63, 52, 62, 52, 51, 61, 62, 51,
		51, 41, 50, 60, 51, 50, 60, 50, 49, 59,
		60, 49, 59, 49, 48, 58, 59, 48, 58, 48,
		47, 57, 58, 47, 57, 47, 46, 56, 57, 46,
		56, 46, 45, 55, 56, 45, 55, 45, 44, 54,
		55, 44, 54, 44, 43, 53, 54, 43, 53, 43,
		42, 52, 53, 42, 52, 42, 41, 51, 52, 41,
		41, 31, 40, 50, 41, 40, 50, 40, 39, 49,
		50, 39, 49, 39, 38, 48, 49, 38, 48, 38,
		37, 47, 48, 37, 47, 37, 36, 46, 47, 36,
		46, 36, 35, 45, 46, 35, 45, 35, 34, 44,
		45, 34, 44, 34, 33, 43, 44, 33, 43, 33,
		32, 42, 43, 32, 42, 32, 31, 41, 42, 31,
		31, 21, 30, 40, 31, 30, 40, 30, 29, 39,
		40, 29, 39, 29, 28, 38, 39, 28, 38, 28,
		27, 37, 38, 27, 37, 27, 26, 36, 37, 26,
		36, 26, 25, 35, 36, 25, 35, 25, 24, 34,
		35, 24, 34, 24, 23, 33, 34, 23, 33, 23,
		22, 32, 33, 22, 32, 22, 21, 31, 32, 21,
		21, 11, 20, 30, 21, 20, 30, 20, 19, 29,
		30, 19, 29, 19, 18, 28, 29, 18, 28, 18,
		17, 27, 28, 17, 27, 17, 16, 26, 27, 16,
		26, 16, 15, 25, 26, 15, 25, 15, 14, 24,
		25, 14, 24, 14, 13, 23, 24, 13, 23, 13,
		12, 22, 23, 12, 22, 12, 11, 21, 22, 11,
		11, 1, 10, 20, 11, 10, 20, 10, 9, 19,
		20, 9, 19, 9, 8, 18, 19, 8, 18, 8,
		7, 17, 18, 7, 17, 7, 6, 16, 17, 6,
		16, 6, 5, 15, 16, 5, 15, 5, 4, 14,
		15, 4, 14, 4, 3, 13, 14, 3, 13, 3,
		2, 12, 13, 2, 12, 2, 1, 11, 12, 1,
		10, 1, 0, 9, 10, 0, 8, 9, 0, 7,
		8, 0, 6, 7, 0, 5, 6, 0, 4, 5,
		0, 3, 4, 0, 2, 3, 0, 1, 2, 0
	};

	ArrayBuffer = VAO::CreateVAO();
	VAO::BindVAO( ArrayBuffer );

	VertexBuffer = VAO::CreateBuffer( VAO::Vertex_Buffer, Vertexes, VAO::Static_Draw );
	IndexBuffer = VAO::CreateBuffer( VAO::Index_Buffer, 4920, IdVertexes, VAO::Static_Draw );

	VAO::SetVertexAttribPointer( VERT_POSITION, 3, GL_FLOAT, GL_FALSE, sizeof( glm::vec3 ), 0 );

	VAO::UnbindVAO();
	VAO::UnbindBuffer( VAO::Vertex_Buffer );
	VAO::UnbindBuffer( VAO::Index_Buffer );

	this->Radius = Radius;
	this->Height = Height;

	BoundingBox.InitBox( glm::vec3( Radius * 2, Height * 2, Radius * 2 ) );
}

//-------------------------------------------------------------------------//

void le::LightCone::QueryTest()
{
	Query.Start();

	VAO::BindVAO( ArrayBuffer );
	glDrawElements( GL_TRIANGLES, 4920, GL_UNSIGNED_INT, 0 );
	VAO::UnbindVAO();

	Query.End();
}

//-------------------------------------------------------------------------//

void le::LightCone::RenderCone()
{
	VAO::BindVAO( ArrayBuffer );
	glDrawElements( GL_TRIANGLES, 4920, GL_UNSIGNED_INT, 0 );
	VAO::UnbindVAO();
}

//-------------------------------------------------------------------------//

void le::LightCone::SetRadius( float Radius )
{
	vector<glm::vec3> Vertexs = CreateCone( Height, Radius );

	glm::vec3* BoxVertexs = BoundingBox.GetVertexs();
	float HalfWidth = Radius / 2;
	this->Radius = Radius;

	BoxVertexs[ 0 ].x = -HalfWidth;
	BoxVertexs[ 0 ].z = HalfWidth;

	BoxVertexs[ 1 ].x = HalfWidth;
	BoxVertexs[ 1 ].z = HalfWidth;

	BoxVertexs[ 2 ].x = -HalfWidth;
	BoxVertexs[ 2 ].z = HalfWidth;

	BoxVertexs[ 3 ].x = HalfWidth;
	BoxVertexs[ 3 ].z = HalfWidth;

	BoxVertexs[ 4 ].x = -HalfWidth;
	BoxVertexs[ 4 ].z = -HalfWidth;

	BoxVertexs[ 5 ].x = HalfWidth;
	BoxVertexs[ 5 ].z = -HalfWidth;

	BoxVertexs[ 6 ].x = -HalfWidth;
	BoxVertexs[ 6 ].z = -HalfWidth;

	BoxVertexs[ 7 ].x = HalfWidth;
	BoxVertexs[ 7 ].z = -HalfWidth;

	glBindBuffer( GL_ARRAY_BUFFER, VertexBuffer );
	glBufferData( GL_ARRAY_BUFFER, Vertexs.size() * sizeof( glm::vec3 ), Vertexs.data(), GL_STATIC_DRAW );
	glBindBuffer( GL_ARRAY_BUFFER, 0 );
}

//-------------------------------------------------------------------------//

void le::LightCone::SetHeight( float Height )
{
	this->Height = Height;

	vector<glm::vec3> Vertexs = CreateCone( Height, Radius );

	glm::vec3* BoxVertexs = BoundingBox.GetVertexs();
	float HalfHeight = Height / 2;

	BoxVertexs[ 0 ].y = -HalfHeight;
	BoxVertexs[ 1 ].y = -HalfHeight;
	BoxVertexs[ 2 ].y = HalfHeight;
	BoxVertexs[ 3 ].y = HalfHeight;
	BoxVertexs[ 4 ].y = -HalfHeight;
	BoxVertexs[ 5 ].y = -HalfHeight;
	BoxVertexs[ 6 ].y = HalfHeight;
	BoxVertexs[ 7 ].y = HalfHeight;

	glBindBuffer( GL_ARRAY_BUFFER, VertexBuffer );
	glBufferData( GL_ARRAY_BUFFER, Vertexs.size() * sizeof( glm::vec3 ), Vertexs.data(), GL_STATIC_DRAW );
	glBindBuffer( GL_ARRAY_BUFFER, 0 );
}

//-------------------------------------------------------------------------//

void le::LightCone::SetPosition( const glm::vec3& Position )
{
	BoundingBox.SetPosition( glm::vec3( Position.x, Position.y - Height / 2, Position.z ) );

	this->Position = Position;
	MatrixPosition = glm::translate( Position );
	Transformation = MatrixPosition * MatrixRotation;
}

//-------------------------------------------------------------------------//

void le::LightCone::SetRotation( const glm::vec3& Rotation )
{
	BoundingBox.SetRotation( Rotation );
	
	glm::vec3 Axis( sin( Rotation.x/ 2 ), sin( Rotation.y / 2 ), sin( Rotation.z/ 2 ) );
	glm::vec3 Rotations( cos( Rotation.x / 2 ), cos( Rotation.y / 2 ), cos( Rotation.z/ 2 ) );

	glm::quat RotateX( Rotations.x, Axis.x, 0, 0 );
	glm::quat RotateY( Rotations.y, 0, Axis.y, 0 );
	glm::quat RotateZ( Rotations.z, 0, 0, Axis.z );

	this->Rotation = RotateX * RotateY * RotateZ;
	MatrixRotation = glm::mat4_cast( this->Rotation );

	Transformation = MatrixPosition * MatrixRotation;
}

//-------------------------------------------------------------------------//

void le::LightCone::SetRotation( const glm::quat& Rotation )
{
	BoundingBox.SetRotation( Rotation );

	this->Rotation = Rotation;
	MatrixRotation = glm::mat4_cast( Rotation );

	Transformation = MatrixPosition * MatrixRotation;
}
//-------------------------------------------------------------------------//

glm::mat4& le::LightCone::GetTransformation()
{
	return Transformation;
}

//-------------------------------------------------------------------------//

glm::vec3& le::LightCone::GetPosition()
{
	return Position;
}

//-------------------------------------------------------------------------//

glm::quat& le::LightCone::GetRotation()
{
	return Rotation;
}

//-------------------------------------------------------------------------//

float le::LightCone::GetRadius()
{
	return Radius;
}

//-------------------------------------------------------------------------//

float le::LightCone::GetHeight()
{
	return Height;
}

//-------------------------------------------------------------------------//

le::LightCone & le::LightCone::operator=( const LightCone & Copy )
{
	Query = Copy.Query;
	Radius = Copy.Radius;
	Height = Copy.Height;
	Transformation = Copy.Transformation;
	Position = Copy.Position;
	BoundingBox = Copy.BoundingBox;

	if ( Copy.ArrayBuffer != 0 )
		InitCone( Height, Radius );
	else
		ArrayBuffer = IndexBuffer = VertexBuffer = 0;

	return *this;
}

//-------------------------------------------------------------------------//

vector<glm::vec3> le::LightCone::CreateCone( const float & Height, const float & Radius )
{
	vector<glm::vec3> Vertexes =
	{
		{ 0.000000, -Height, 0.000000 },
		{ 0.024390 * Radius, -Height, 0.000000 * Radius },
		{ 0.019732 * Radius, -Height, 0.014336 * Radius },
		{ 0.007537 * Radius, -Height, 0.023196 * Radius },
		{ -0.007537 * Radius, -Height, 0.023196 * Radius },
		{ -0.019732 * Radius, -Height, 0.014336 * Radius },
		{ -0.024390 * Radius, -Height, -0.000000 * Radius },
		{ -0.019732 * Radius, -Height, -0.014336 * Radius },
		{ -0.007537 * Radius, -Height, -0.023196 * Radius },
		{ 0.007537 * Radius, -Height, -0.023196 * Radius },
		{ 0.019732 * Radius, -Height, -0.014336 * Radius },
		{ 0.048780 * Radius, -Height, 0.000000 * Radius },
		{ 0.039464 * Radius, -Height, 0.028672 * Radius },
		{ 0.015074 * Radius, -Height, 0.046393 * Radius },
		{ -0.015074 * Radius, -Height, 0.046393 * Radius },
		{ -0.039464 * Radius, -Height, 0.028672 * Radius },
		{ -0.048780 * Radius, -Height, -0.000000 * Radius },
		{ -0.039464 * Radius, -Height, -0.028672 * Radius },
		{ -0.015074 * Radius, -Height, -0.046393 * Radius },
		{ 0.015074 * Radius, -Height, -0.046393 * Radius },
		{ 0.039464 * Radius, -Height, -0.028672 * Radius },
		{ 0.073171 * Radius, -Height, 0.000000 * Radius },
		{ 0.059196 * Radius, -Height, 0.043009 * Radius },
		{ 0.022611 * Radius, -Height, 0.069590 * Radius },
		{ -0.022611 * Radius, -Height, 0.069589 * Radius },
		{ -0.059196 * Radius, -Height, 0.043009 * Radius },
		{ -0.073171 * Radius, -Height, -0.000000 * Radius },
		{ -0.059196 * Radius, -Height, -0.043009 * Radius },
		{ -0.022611 * Radius, -Height, -0.069589 * Radius },
		{ 0.022611 * Radius, -Height, -0.069589 * Radius },
		{ 0.059196 * Radius, -Height, -0.043009 * Radius },
		{ 0.097561 * Radius, -Height, 0.000000 * Radius },
		{ 0.078928 * Radius, -Height, 0.057345 * Radius },
		{ 0.030148 * Radius, -Height, 0.092786 * Radius },
		{ -0.030148 * Radius, -Height, 0.092786 * Radius },
		{ -0.078928 * Radius, -Height, 0.057345 * Radius },
		{ -0.097561 * Radius, -Height, -0.000000 * Radius },
		{ -0.078928 * Radius, -Height, -0.057345 * Radius },
		{ -0.030148 * Radius, -Height, -0.092786 * Radius },
		{ 0.030148 * Radius, -Height, -0.092786 * Radius },
		{ 0.078929 * Radius, -Height, -0.057345 * Radius },
		{ 0.121951 * Radius, -Height, 0.000000 * Radius },
		{ 0.098661 * Radius, -Height, 0.071681 * Radius },
		{ 0.037685 * Radius, -Height, 0.115983 * Radius },
		{ -0.037685 * Radius, -Height, 0.115983 * Radius },
		{ -0.098661 * Radius, -Height, 0.071681 * Radius },
		{ -0.121951 * Radius, -Height, -0.000000 * Radius },
		{ -0.098661 * Radius, -Height, -0.071681 * Radius },
		{ -0.037685 * Radius, -Height, -0.115983 * Radius },
		{ 0.037685 * Radius, -Height, -0.115983 * Radius },
		{ 0.098661 * Radius, -Height, -0.071681 * Radius },
		{ 0.146341 * Radius, -Height, 0.000000 * Radius },
		{ 0.118393 * Radius, -Height, 0.086017 * Radius },
		{ 0.045222 * Radius, -Height, 0.139179 * Radius },
		{ -0.045222 * Radius, -Height, 0.139179 * Radius },
		{ -0.118393 * Radius, -Height, 0.086017 * Radius },
		{ -0.146341 * Radius, -Height, -0.000000 * Radius },
		{ -0.118393 * Radius, -Height, -0.086017 * Radius },
		{ -0.045222 * Radius, -Height, -0.139179 * Radius },
		{ 0.045222 * Radius, -Height, -0.139179 * Radius },
		{ 0.118393 * Radius, -Height, -0.086017 * Radius },
		{ 0.170732 * Radius, -Height, 0.000000 * Radius },
		{ 0.138125 * Radius, -Height, 0.100354 * Radius },
		{ 0.052759 * Radius, -Height, 0.162376 * Radius },
		{ -0.052759 * Radius, -Height, 0.162375 * Radius },
		{ -0.138125 * Radius, -Height, 0.100354 * Radius },
		{ -0.170732 * Radius, -Height, -0.000000 * Radius },
		{ -0.138125 * Radius, -Height, -0.100354 * Radius },
		{ -0.052759 * Radius, -Height, -0.162375 * Radius },
		{ 0.052759 * Radius, -Height, -0.162375 * Radius },
		{ 0.138125 * Radius, -Height, -0.100354 * Radius },
		{ 0.195122 * Radius, -Height, 0.000000 * Radius },
		{ 0.157857 * Radius, -Height, 0.114690 * Radius },
		{ 0.060296 * Radius, -Height, 0.185572 * Radius },
		{ -0.060296 * Radius, -Height, 0.185572 * Radius },
		{ -0.157857 * Radius, -Height, 0.114690 * Radius },
		{ -0.195122 * Radius, -Height, -0.000000 * Radius },
		{ -0.157857 * Radius, -Height, -0.114690 * Radius },
		{ -0.060296 * Radius, -Height, -0.185572 * Radius },
		{ 0.060296 * Radius, -Height, -0.185572 * Radius },
		{ 0.157857 * Radius, -Height, -0.114690 * Radius },
		{ 0.219512 * Radius, -Height, 0.000000 * Radius },
		{ 0.177589 * Radius, -Height, 0.129026 * Radius },
		{ 0.067833 * Radius, -Height, 0.208769 * Radius },
		{ -0.067833 * Radius, -Height, 0.208769 * Radius },
		{ -0.177589 * Radius, -Height, 0.129026 * Radius },
		{ -0.219512 * Radius, -Height, -0.000000 * Radius },
		{ -0.177589 * Radius, -Height, -0.129026 * Radius },
		{ -0.067833 * Radius, -Height, -0.208769 * Radius },
		{ 0.067833 * Radius, -Height, -0.208769 * Radius },
		{ 0.177589 * Radius, -Height, -0.129026 * Radius },
		{ 0.243902 * Radius, -Height, 0.000000 * Radius },
		{ 0.197321 * Radius, -Height, 0.143362 * Radius },
		{ 0.075370 * Radius, -Height, 0.231965 * Radius },
		{ -0.075370 * Radius, -Height, 0.231965 * Radius },
		{ -0.197321 * Radius, -Height, 0.143362 * Radius },
		{ -0.243902 * Radius, -Height, -0.000000 * Radius },
		{ -0.197321 * Radius, -Height, -0.143362 * Radius },
		{ -0.075370 * Radius, -Height, -0.231965 * Radius },
		{ 0.075370 * Radius, -Height, -0.231965 * Radius },
		{ 0.197321 * Radius, -Height, -0.143362 * Radius },
		{ 0.268293 * Radius, -Height, 0.000000 * Radius },
		{ 0.217053 * Radius, -Height, 0.157698 * Radius },
		{ 0.082907 * Radius, -Height, 0.255162 * Radius },
		{ -0.082907 * Radius, -Height, 0.255161 * Radius },
		{ -0.217053 * Radius, -Height, 0.157698 * Radius },
		{ -0.268293 * Radius, -Height, -0.000000 * Radius },
		{ -0.217053 * Radius, -Height, -0.157699 * Radius },
		{ -0.082907 * Radius, -Height, -0.255161 * Radius },
		{ 0.082907 * Radius, -Height, -0.255161 * Radius },
		{ 0.217053 * Radius, -Height, -0.157698 * Radius },
		{ 0.292683 * Radius, -Height, 0.000000 * Radius },
		{ 0.236785 * Radius, -Height, 0.172035 * Radius },
		{ 0.090444 * Radius, -Height, 0.278358 * Radius },
		{ -0.090444 * Radius, -Height, 0.278358 * Radius },
		{ -0.236785 * Radius, -Height, 0.172035 * Radius },
		{ -0.292683 * Radius, -Height, -0.000000 * Radius },
		{ -0.236785 * Radius, -Height, -0.172035 * Radius },
		{ -0.090444 * Radius, -Height, -0.278358 * Radius },
		{ 0.090444 * Radius, -Height, -0.278358 * Radius },
		{ 0.236786 * Radius, -Height, -0.172035 * Radius },
		{ 0.317073 * Radius, -Height, 0.000000 * Radius },
		{ 0.256518 * Radius, -Height, 0.186371 * Radius },
		{ 0.097981 * Radius, -Height, 0.301555 * Radius },
		{ -0.097981 * Radius, -Height, 0.301555 * Radius },
		{ -0.256518 * Radius, -Height, 0.186371 * Radius },
		{ -0.317073 * Radius, -Height, -0.000000 * Radius },
		{ -0.256518 * Radius, -Height, -0.186371 * Radius },
		{ -0.097981 * Radius, -Height, -0.301555 * Radius },
		{ 0.097981 * Radius, -Height, -0.301555 * Radius },
		{ 0.256518 * Radius, -Height, -0.186371 * Radius },
		{ 0.341463 * Radius, -Height, 0.000000 * Radius },
		{ 0.276250 * Radius, -Height, 0.200707 * Radius },
		{ 0.105518 * Radius, -Height, 0.324751 * Radius },
		{ -0.105518 * Radius, -Height, 0.324751 * Radius },
		{ -0.276250 * Radius, -Height, 0.200707 * Radius },
		{ -0.341463 * Radius, -Height, -0.000000 * Radius },
		{ -0.276250 * Radius, -Height, -0.200707 * Radius },
		{ -0.105518 * Radius, -Height, -0.324751 * Radius },
		{ 0.105518 * Radius, -Height, -0.324751 * Radius },
		{ 0.276250 * Radius, -Height, -0.200707 * Radius },
		{ 0.365854 * Radius, -Height, 0.000000 * Radius },
		{ 0.295982 * Radius, -Height, 0.215043 * Radius },
		{ 0.113055 * Radius, -Height, 0.347948 * Radius },
		{ -0.113055 * Radius, -Height, 0.347948 * Radius },
		{ -0.295982 * Radius, -Height, 0.215043 * Radius },
		{ -0.365854 * Radius, -Height, -0.000000 * Radius },
		{ -0.295982 * Radius, -Height, -0.215043 * Radius },
		{ -0.113055 * Radius, -Height, -0.347948 * Radius },
		{ 0.113055 * Radius, -Height, -0.347948 * Radius },
		{ 0.295982 * Radius, -Height, -0.215043 * Radius },
		{ 0.390244 * Radius, -Height, 0.000000 * Radius },
		{ 0.315714 * Radius, -Height, 0.229380 * Radius },
		{ 0.120592 * Radius, -Height, 0.371144 * Radius },
		{ -0.120592 * Radius, -Height, 0.371144 * Radius },
		{ -0.315714 * Radius, -Height, 0.229380 * Radius },
		{ -0.390244 * Radius, -Height, -0.000000 * Radius },
		{ -0.315714 * Radius, -Height, -0.229380 * Radius },
		{ -0.120592 * Radius, -Height, -0.371144 * Radius },
		{ 0.120592 * Radius, -Height, -0.371144 * Radius },
		{ 0.315714 * Radius, -Height, -0.229379 * Radius },
		{ 0.414634 * Radius, -Height, 0.000000 * Radius },
		{ 0.335446 * Radius, -Height, 0.243716 * Radius },
		{ 0.128129 * Radius, -Height, 0.394341 * Radius },
		{ -0.128129 * Radius, -Height, 0.394340 * Radius },
		{ -0.335446 * Radius, -Height, 0.243716 * Radius },
		{ -0.414634 * Radius, -Height, -0.000000 * Radius },
		{ -0.335446 * Radius, -Height, -0.243716 * Radius },
		{ -0.128129 * Radius, -Height, -0.394340 * Radius },
		{ 0.128129 * Radius, -Height, -0.394340 * Radius },
		{ 0.335446 * Radius, -Height, -0.243716 * Radius },
		{ 0.439024 * Radius, -Height, 0.000000 * Radius },
		{ 0.355178 * Radius, -Height, 0.258052 * Radius },
		{ 0.135666 * Radius, -Height, 0.417537 * Radius },
		{ -0.135666 * Radius, -Height, 0.417537 * Radius },
		{ -0.355178 * Radius, -Height, 0.258052 * Radius },
		{ -0.439024 * Radius, -Height, -0.000000 * Radius },
		{ -0.355178 * Radius, -Height, -0.258052 * Radius },
		{ -0.135666 * Radius, -Height, -0.417537 * Radius },
		{ 0.135666 * Radius, -Height, -0.417537 * Radius },
		{ 0.355178 * Radius, -Height, -0.258052 * Radius },
		{ 0.463415 * Radius, -Height, 0.000000 * Radius },
		{ 0.374910 * Radius, -Height, 0.272388 * Radius },
		{ 0.143203 * Radius, -Height, 0.440734 * Radius },
		{ -0.143203 * Radius, -Height, 0.440733 * Radius },
		{ -0.374910 * Radius, -Height, 0.272388 * Radius },
		{ -0.463415 * Radius, -Height, -0.000000 * Radius },
		{ -0.374910 * Radius, -Height, -0.272388 * Radius },
		{ -0.143203 * Radius, -Height, -0.440733 * Radius },
		{ 0.143203 * Radius, -Height, -0.440733 * Radius },
		{ 0.374910 * Radius, -Height, -0.272388 * Radius },
		{ 0.487805 * Radius, -Height, 0.000000 * Radius },
		{ 0.394642 * Radius, -Height, 0.286725 * Radius },
		{ 0.150740 * Radius, -Height, 0.463930 * Radius },
		{ -0.150740 * Radius, -Height, 0.463930 * Radius },
		{ -0.394642 * Radius, -Height, 0.286724 * Radius },
		{ -0.487805 * Radius, -Height, -0.000000 * Radius },
		{ -0.394642 * Radius, -Height, -0.286725 * Radius },
		{ -0.150740 * Radius, -Height, -0.463930 * Radius },
		{ 0.150740 * Radius, -Height, -0.463930 * Radius },
		{ 0.394643 * Radius, -Height, -0.286724 * Radius },
		{ 0.512195 * Radius, -Height, 0.000000 * Radius },
		{ 0.414375 * Radius, -Height, 0.301061 * Radius },
		{ 0.158277 * Radius, -Height, 0.487126 * Radius },
		{ -0.158277 * Radius, -Height, 0.487126 * Radius },
		{ -0.414375 * Radius, -Height, 0.301061 * Radius },
		{ -0.512195 * Radius, -Height, -0.000000 * Radius },
		{ -0.414375 * Radius, -Height, -0.301061 * Radius },
		{ -0.158277 * Radius, -Height, -0.487126 * Radius },
		{ 0.158277 * Radius, -Height, -0.487126 * Radius },
		{ 0.414375 * Radius, -Height, -0.301061 * Radius },
		{ 0.536585 * Radius, -Height, 0.000000 * Radius },
		{ 0.434107 * Radius, -Height, 0.315397 * Radius },
		{ 0.165814 * Radius, -Height, 0.510323 * Radius },
		{ -0.165814 * Radius, -Height, 0.510323 * Radius },
		{ -0.434107 * Radius, -Height, 0.315397 * Radius },
		{ -0.536585 * Radius, -Height, -0.000000 * Radius },
		{ -0.434107 * Radius, -Height, -0.315397 * Radius },
		{ -0.165814 * Radius, -Height, -0.510323 * Radius },
		{ 0.165814 * Radius, -Height, -0.510323 * Radius },
		{ 0.434107 * Radius, -Height, -0.315397 * Radius },
		{ 0.560976 * Radius, -Height, 0.000000 * Radius },
		{ 0.453839 * Radius, -Height, 0.329733 * Radius },
		{ 0.173351 * Radius, -Height, 0.533520 * Radius },
		{ -0.173351 * Radius, -Height, 0.533520 * Radius },
		{ -0.453839 * Radius, -Height, 0.329733 * Radius },
		{ -0.560976 * Radius, -Height, -0.000000 * Radius },
		{ -0.453839 * Radius, -Height, -0.329733 * Radius },
		{ -0.173351 * Radius, -Height, -0.533520 * Radius },
		{ 0.173351 * Radius, -Height, -0.533520 * Radius },
		{ 0.453839 * Radius, -Height, -0.329733 * Radius },
		{ 0.585366 * Radius, -Height, 0.000000 * Radius },
		{ 0.473571 * Radius, -Height, 0.344069 * Radius },
		{ 0.180888 * Radius, -Height, 0.556716 * Radius },
		{ -0.180888 * Radius, -Height, 0.556716 * Radius },
		{ -0.473571 * Radius, -Height, 0.344069 * Radius },
		{ -0.585366 * Radius, -Height, -0.000000 * Radius },
		{ -0.473571 * Radius, -Height, -0.344069 * Radius },
		{ -0.180888 * Radius, -Height, -0.556716 * Radius },
		{ 0.180888 * Radius, -Height, -0.556716 * Radius },
		{ 0.473571 * Radius, -Height, -0.344069 * Radius },
		{ 0.609756 * Radius, -Height, 0.000000 * Radius },
		{ 0.493303 * Radius, -Height, 0.358406 * Radius },
		{ 0.188425 * Radius, -Height, 0.579913 * Radius },
		{ -0.188425 * Radius, -Height, 0.579912 * Radius },
		{ -0.493303 * Radius, -Height, 0.358406 * Radius },
		{ -0.609756 * Radius, -Height, -0.000000 * Radius },
		{ -0.493303 * Radius, -Height, -0.358406 * Radius },
		{ -0.188425 * Radius, -Height, -0.579912 * Radius },
		{ 0.188425 * Radius, -Height, -0.579912 * Radius },
		{ 0.493303 * Radius, -Height, -0.358405 * Radius },
		{ 0.634146 * Radius, -Height, 0.000000 * Radius },
		{ 0.513035 * Radius, -Height, 0.372742 * Radius },
		{ 0.195962 * Radius, -Height, 0.603109 * Radius },
		{ -0.195962 * Radius, -Height, 0.603109 * Radius },
		{ -0.513035 * Radius, -Height, 0.372742 * Radius },
		{ -0.634146 * Radius, -Height, -0.000000 * Radius },
		{ -0.513035 * Radius, -Height, -0.372742 * Radius },
		{ -0.195962 * Radius, -Height, -0.603109 * Radius },
		{ 0.195962 * Radius, -Height, -0.603109 * Radius },
		{ 0.513035 * Radius, -Height, -0.372742 * Radius },
		{ 0.658537 * Radius, -Height, 0.000000 * Radius },
		{ 0.532767 * Radius, -Height, 0.387078 * Radius },
		{ 0.203499 * Radius, -Height, 0.626306 * Radius },
		{ -0.203499 * Radius, -Height, 0.626306 * Radius },
		{ -0.532767 * Radius, -Height, 0.387078 * Radius },
		{ -0.658537 * Radius, -Height, -0.000000 * Radius },
		{ -0.532767 * Radius, -Height, -0.387078 * Radius },
		{ -0.203499 * Radius, -Height, -0.626306 * Radius },
		{ 0.203499 * Radius, -Height, -0.626306 * Radius },
		{ 0.532767 * Radius, -Height, -0.387078 * Radius },
		{ 0.682927 * Radius, -Height, 0.000000 * Radius },
		{ 0.552499 * Radius, -Height, 0.401414 * Radius },
		{ 0.211036 * Radius, -Height, 0.649502 * Radius },
		{ -0.211036 * Radius, -Height, 0.649502 * Radius },
		{ -0.552499 * Radius, -Height, 0.401414 * Radius },
		{ -0.682927 * Radius, -Height, -0.000000 * Radius },
		{ -0.552499 * Radius, -Height, -0.401414 * Radius },
		{ -0.211036 * Radius, -Height, -0.649502 * Radius },
		{ 0.211036 * Radius, -Height, -0.649502 * Radius },
		{ 0.552500 * Radius, -Height, -0.401414 * Radius },
		{ 0.707317 * Radius, -Height, 0.000000 * Radius },
		{ 0.572232 * Radius, -Height, 0.415751 * Radius },
		{ 0.218573 * Radius, -Height, 0.672698 * Radius },
		{ -0.218573 * Radius, -Height, 0.672698 * Radius },
		{ -0.572232 * Radius, -Height, 0.415750 * Radius },
		{ -0.707317 * Radius, -Height, -0.000000 * Radius },
		{ -0.572231 * Radius, -Height, -0.415751 * Radius },
		{ -0.218573 * Radius, -Height, -0.672698 * Radius },
		{ 0.218573 * Radius, -Height, -0.672698 * Radius },
		{ 0.572232 * Radius, -Height, -0.415750 * Radius },
		{ 0.731707 * Radius, -Height, 0.000000 * Radius },
		{ 0.591964 * Radius, -Height, 0.430087 * Radius },
		{ 0.226110 * Radius, -Height, 0.695895 * Radius },
		{ -0.226110 * Radius, -Height, 0.695895 * Radius },
		{ -0.591964 * Radius, -Height, 0.430087 * Radius },
		{ -0.731707 * Radius, -Height, -0.000000 * Radius },
		{ -0.591964 * Radius, -Height, -0.430087 * Radius },
		{ -0.226110 * Radius, -Height, -0.695895 * Radius },
		{ 0.226110 * Radius, -Height, -0.695895 * Radius },
		{ 0.591964 * Radius, -Height, -0.430087 * Radius },
		{ 0.756098 * Radius, -Height, 0.000000 * Radius },
		{ 0.611696 * Radius, -Height, 0.444423 * Radius },
		{ 0.233647 * Radius, -Height, 0.719092 * Radius },
		{ -0.233647 * Radius, -Height, 0.719091 * Radius },
		{ -0.611696 * Radius, -Height, 0.444423 * Radius },
		{ -0.756098 * Radius, -Height, -0.000000 * Radius },
		{ -0.611696 * Radius, -Height, -0.444423 * Radius },
		{ -0.233647 * Radius, -Height, -0.719091 * Radius },
		{ 0.233647 * Radius, -Height, -0.719091 * Radius },
		{ 0.611696 * Radius, -Height, -0.444423 * Radius },
		{ 0.780488 * Radius, -Height, 0.000000 * Radius },
		{ 0.631428 * Radius, -Height, 0.458759 * Radius },
		{ 0.241184 * Radius, -Height, 0.742288 * Radius },
		{ -0.241184 * Radius, -Height, 0.742288 * Radius },
		{ -0.631428 * Radius, -Height, 0.458759 * Radius },
		{ -0.780488 * Radius, -Height, -0.000000 * Radius },
		{ -0.631428 * Radius, -Height, -0.458759 * Radius },
		{ -0.241184 * Radius, -Height, -0.742288 * Radius },
		{ 0.241184 * Radius, -Height, -0.742288 * Radius },
		{ 0.631428 * Radius, -Height, -0.458759 * Radius },
		{ 0.804878 * Radius, -Height, 0.000000 * Radius },
		{ 0.651160 * Radius, -Height, 0.473095 * Radius },
		{ 0.248721 * Radius, -Height, 0.765485 * Radius },
		{ -0.248721 * Radius, -Height, 0.765485 * Radius },
		{ -0.651160 * Radius, -Height, 0.473095 * Radius },
		{ -0.804878 * Radius, -Height, -0.000000 * Radius },
		{ -0.651160 * Radius, -Height, -0.473096 * Radius },
		{ -0.248721 * Radius, -Height, -0.765485 * Radius },
		{ 0.248721 * Radius, -Height, -0.765485 * Radius },
		{ 0.651160 * Radius, -Height, -0.473095 * Radius },
		{ 0.829268 * Radius, -Height, 0.000000 * Radius },
		{ 0.670892 * Radius, -Height, 0.487432 * Radius },
		{ 0.256258 * Radius, -Height, 0.788681 * Radius },
		{ -0.256258 * Radius, -Height, 0.788681 * Radius },
		{ -0.670892 * Radius, -Height, 0.487432 * Radius },
		{ -0.829268 * Radius, -Height, -0.000000 * Radius },
		{ -0.670892 * Radius, -Height, -0.487432 * Radius },
		{ -0.256258 * Radius, -Height, -0.788681 * Radius },
		{ 0.256258 * Radius, -Height, -0.788681 * Radius },
		{ 0.670892 * Radius, -Height, -0.487431 * Radius },
		{ 0.853659 * Radius, -Height, 0.000000 * Radius },
		{ 0.690624 * Radius, -Height, 0.501768 * Radius },
		{ 0.263795 * Radius, -Height, 0.811878 * Radius },
		{ -0.263795 * Radius, -Height, 0.811877 * Radius },
		{ -0.690624 * Radius, -Height, 0.501768 * Radius },
		{ -0.853659 * Radius, -Height, -0.000000 * Radius },
		{ -0.690624 * Radius, -Height, -0.501768 * Radius },
		{ -0.263795 * Radius, -Height, -0.811877 * Radius },
		{ 0.263795 * Radius, -Height, -0.811877 * Radius },
		{ 0.690624 * Radius, -Height, -0.501768 * Radius },
		{ 0.878049 * Radius, -Height, 0.000000 * Radius },
		{ 0.710356 * Radius, -Height, 0.516104 * Radius },
		{ 0.271332 * Radius, -Height, 0.835074 * Radius },
		{ -0.271332 * Radius, -Height, 0.835074 * Radius },
		{ -0.710356 * Radius, -Height, 0.516104 * Radius },
		{ -0.878049 * Radius, -Height, -0.000000 * Radius },
		{ -0.710356 * Radius, -Height, -0.516104 * Radius },
		{ -0.271332 * Radius, -Height, -0.835074 * Radius },
		{ 0.271332 * Radius, -Height, -0.835074 * Radius },
		{ 0.710357 * Radius, -Height, -0.516104 * Radius },
		{ 0.902439 * Radius, -Height, 0.000000 * Radius },
		{ 0.730088 * Radius, -Height, 0.530440 * Radius },
		{ 0.278869 * Radius, -Height, 0.858271 * Radius },
		{ -0.278869 * Radius, -Height, 0.858270 * Radius },
		{ -0.730089 * Radius, -Height, 0.530440 * Radius },
		{ -0.902439 * Radius, -Height, -0.000000 * Radius },
		{ -0.730088 * Radius, -Height, -0.530440 * Radius },
		{ -0.278869 * Radius, -Height, -0.858270 * Radius },
		{ 0.278869 * Radius, -Height, -0.858270 * Radius },
		{ 0.730089 * Radius, -Height, -0.530440 * Radius },
		{ 0.926829 * Radius, -Height, 0.000000 * Radius },
		{ 0.749821 * Radius, -Height, 0.544777 * Radius },
		{ 0.286406 * Radius, -Height, 0.881467 * Radius },
		{ -0.286406 * Radius, -Height, 0.881467 * Radius },
		{ -0.749821 * Radius, -Height, 0.544776 * Radius },
		{ -0.926829 * Radius, -Height, -0.000000 * Radius },
		{ -0.749821 * Radius, -Height, -0.544777 * Radius },
		{ -0.286406 * Radius, -Height, -0.881467 * Radius },
		{ 0.286406 * Radius, -Height, -0.881467 * Radius },
		{ 0.749821 * Radius, -Height, -0.544776 * Radius },
		{ 0.951219 * Radius, -Height, 0.000000 * Radius },
		{ 0.769553 * Radius, -Height, 0.559113 * Radius },
		{ 0.293943 * Radius, -Height, 0.904664 * Radius },
		{ -0.293943 * Radius, -Height, 0.904663 * Radius },
		{ -0.769553 * Radius, -Height, 0.559113 * Radius },
		{ -0.951219 * Radius, -Height, -0.000000 * Radius },
		{ -0.769553 * Radius, -Height, -0.559113 * Radius },
		{ -0.293943 * Radius, -Height, -0.904663 * Radius },
		{ 0.293943 * Radius, -Height, -0.904663 * Radius },
		{ 0.769553 * Radius, -Height, -0.559112 * Radius },
		{ 0.975610 * Radius, -Height, 0.000000 * Radius },
		{ 0.789285 * Radius, -Height, 0.573449 * Radius },
		{ 0.301480 * Radius, -Height, 0.927860 * Radius },
		{ -0.301480 * Radius, -Height, 0.927860 * Radius },
		{ -0.789285 * Radius, -Height, 0.573449 * Radius },
		{ -0.975610 * Radius, -Height, -0.000000 * Radius },
		{ -0.789285 * Radius, -Height, -0.573449 * Radius },
		{ -0.301480 * Radius, -Height, -0.927860 * Radius },
		{ 0.301480 * Radius, -Height, -0.927860 * Radius },
		{ 0.789285 * Radius, -Height, -0.573449 * Radius },
		{ 1.000000 * Radius, -Height, 0.000000 * Radius },
		{ 0.809017 * Radius, -Height, 0.587785 * Radius },
		{ 0.309017 * Radius, -Height, 0.951057 * Radius },
		{ -0.309017 * Radius, -Height, 0.951056 * Radius },
		{ -0.809017 * Radius, -Height, 0.587785 * Radius },
		{ -1.000000 * Radius, -Height, -0.000000 * Radius },
		{ -0.809017 * Radius, -Height, -0.587785 * Radius },
		{ -0.309017 * Radius, -Height, -0.951056 * Radius },
		{ 0.309017 * Radius, -Height, -0.951056 * Radius },
		{ 0.809017 * Radius, -Height, -0.587785 * Radius },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 },
		{ 0.000000, 0.000000, 0.000000 }
	};

	return Vertexes;
}

//-------------------------------------------------------------------------//