//////////////////////////////////////////////////////////////////////////
// 
//			*** lifeEngine (Двигатель Жизни) ***
//					Copyright (C) 2017
//
// Связь со мной:		https://vk.com/zombihello
// Репозиторий движка:  https://github.com/zombihello/lifeEngine
// 
//////////////////////////////////////////////////////////////////////////

#ifndef FUNC_DOOR_H
#define FUNC_DOOR_H

#define COMPILING_LIBRARY
#include <DllGlobal.h>

//////////////////
// LIFEENGINE
//////////////////
#include <Graphics\Level\Entityes\BaseEntity.h>
#include <Graphics\Level\BSPInfo.h>

namespace le
{
	//////////////////////////////////////////////////////////////////////
	/// \brief Класс энтити-объекта для работы двери
	//////////////////////////////////////////////////////////////////////
	class DLL_API Func_Door : public BaseEntity
	{
	public:

		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор
		///
		/// \param[in] Values Переменные энтити-объекта
		//////////////////////////////////////////////////////////////////////
		Func_Door( map<string, string>& Values );

		//////////////////////////////////////////////////////////////////////
		/// \brief Обновить энтити-объект
		//////////////////////////////////////////////////////////////////////
		void Update();

		//////////////////////////////////////////////////////////////////////
		/// \brief Задать модель для энтити
		///
		/// \param[in] BSPModel Модель для энтити
		//////////////////////////////////////////////////////////////////////
		void SetModel( BSPModel& BSPModel );

		//////////////////////////////////////////////////////////////////////
		/// \brief Получить индекс модели в массиве
		///
		/// \return Индекс модели в массиве. Если модели нет, то вернет -1
		//////////////////////////////////////////////////////////////////////
		int GetIdModel();

	private:
		
		int					IdModel;			///< Индекс модели в массиве
		float				Angle;				///< Угол на который повернулась дверь
		float				AngleMax;			///< Максимальный угол поворота двери
		BSPModel*			Model;				///< Модель привязанная к энтити	

		glm::quat			StartQuat;
		glm::quat			EndQuat;
		glm::quat			TempQuat;
	};
}

#endif // FUNC_DOOR_H
