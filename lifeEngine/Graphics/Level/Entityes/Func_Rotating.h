//////////////////////////////////////////////////////////////////////////
// 
//			*** lifeEngine (Двигатель Жизни) ***
//					Copyright (C) 2017
//
// Связь со мной:		https://vk.com/zombihello
// Репозиторий движка:  https://github.com/zombihello/lifeEngine
// 
//////////////////////////////////////////////////////////////////////////

#ifndef FUNC_ROTATING_H
#define FUNC_ROTATING_H

#define COMPILING_LIBRARY
#include <DllGlobal.h>

//////////////////
// LIFEENGINE
//////////////////
#include <Graphics\Level\Entityes\BaseEntity.h>
#include <Graphics\Level\BSPInfo.h>

namespace le
{
	//////////////////////////////////////////////////////////////////////
	/// \brief Класс энтити-объекта для вращения объекта
	//////////////////////////////////////////////////////////////////////
	class DLL_API Func_Rotating : public BaseEntity
	{
	public:

		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор
		///
		/// \param[in] Values Переменные энтити-объекта
		//////////////////////////////////////////////////////////////////////
		Func_Rotating( map<string, string>& Values );

		//////////////////////////////////////////////////////////////////////
		/// \brief Обновить энтити-объект
		//////////////////////////////////////////////////////////////////////
		void Update();

		//////////////////////////////////////////////////////////////////////
		/// \brief Задать модель для энтити
		///
		/// \param[in] BSPModel Модель для энтити
		//////////////////////////////////////////////////////////////////////
		void SetModel( BSPModel& BSPModel );

		//////////////////////////////////////////////////////////////////////
		/// \brief Получить индекс модели в массиве
		///
		/// \return Индекс модели в массиве. Если модели нет, то вернет -1
		//////////////////////////////////////////////////////////////////////
		int GetIdModel();

	private:

		int					IdModel;			///< Индекс модели в массиве
		float				Speed;				///< Скорость вращения объекта
		BSPModel*			Model;				///< Модель привязанная к энтити	

		glm::vec3			Local_Max;			///< Ограничивающее тело (бокс) максимальная позиция в локальных координатах
		glm::vec3			Local_Min;			///< Ограничивающее тело (бокс) минимальная позиция в локальных координатах
	};
}

#endif // FUNC_ROTATING_H
